#
# wm independent hotkeys
#

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd; \
	notify-send "sxhkd config reloaded"

# terminal emulator
super + Return
	kitty

# program launcher
super + space
	rofi -show drun

# window cycle
alt + Tab
	rofi -show window

super + w
	firefox

# drop-down terminal
super + grave
	tdrop -ma -y "34" -w -4 kitty

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
	bspc node -s biggest



#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}0

#
# focus/swap
#

# focus the node in the given direction
# Now with multi-monitor support. (should work like i3)
super + {_,shift + }{Left,Down,Up,Right}
  mode={f,s}; \
  direction={west,south,north,east}; \
  monitor=$(bspc query -M --names -m $direction); \
  if bspc query -N -n $direction -m focused > /dev/null; then \
    bspc node -$mode $direction; \
  else; \
    if [ $mode = "f" ]; then \
      if bspc query -N -d ${monitor}:focused > /dev/null; then \
        bspc node -$mode $direction; \
      else; \
        bspc monitor -f $direction; \
      fi; \
    else; \
      bspc node -m $direction --follow; \
    fi; \
  fi

# focus or send to the given desktop
# Now supports multimonitor where each monitor
# can have up to 10 workspaces each.
super + {_,shift + }{1-6}
  monitor=$(bspc query -M --names -m focused); \
  bspc {desktop -f,node -d} $monitor:'^'{1-6}

# focus the next/previous desktop
super + bracket{left,right}
	bspc desktop -f {prev,next}

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus the next/previous node in the same window
super + {comma,period}
  bspc node -f {prev, next}.local

# focus the next/previous node
super + {j, k}
	bspc node -f {prev, next}

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {Left, Down, Up, Right}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {Left, Down, Up, Right}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left, Down, Up, Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# adjust gap sizes
super + {equal,minus}
	bspc config window_gap $(( $(bspc config window_gap) {-, +} 5 ))

super + ctrl + shift + {Left,Right,Up,Down}
    bspc node @focused:/ --rotate {270,90,180,180}
